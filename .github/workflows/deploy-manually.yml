name: Deploy latest version in DEV

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    environment: dev-cd
    
    permissions:
      id-token: write

    steps:
      #
      # Checkout the source code.
      #
      - name: Checkout the source code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_PAT }}
          fetch-depth: 0

      #
      # Setup the JDK.
      #
      - name: Setup the JDK
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      #
      # Build dependencies + Execute unit-test + Calculate test coverage + SCA with Sonar + Build native image + Docker build + Docker login + Docker push
      #
      - name: Build dependencies + Execute unit-test + Calculate test coverage + SCA with Sonar + Build native image + Docker build + Docker login + Docker push
        if: steps.semantic.outputs.new_release_published == 'true'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn clean validate -Pbootstrap --no-transfer-progress
          mvn verify -Pvalidate --no-transfer-progress
          mvn clean package -Pnative -Dmaven.test.skip=true --no-transfer-progress
          docker build -f src/main/docker/Dockerfile.native-micro -t ghcr.io/${{ github.repository }}:latest .
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push -a ghcr.io/${{ github.repository }}
    
      #
      # Login to Azure.
      #
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      #
      # Update Container App
      #
      - name: Update Container App
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update -n ${{ secrets.AZURE_CONTAINER_APP_NAME }} -g ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} --image ghcr.io/${{ github.repository }}:latest
      
      # TODO: Run Integration Test
      # TODO: Run Performance Test
